{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"GasSettingsBySpeed": {
				"properties": {
					"gasPrice": {
						"type": "string"
					},
					"maxFeePerGas": {
						"type": "string"
					},
					"maxPriorityFeePerGas": {
						"type": "string"
					},
					"confirmationTime": {
						"type": "string",
						"description": "Approximate transaction confirmation time, with current parameters. In seconds."
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"GasSettings": {
				"properties": {
					"high": {
						"$ref": "#/components/schemas/GasSettingsBySpeed"
					},
					"middle": {
						"$ref": "#/components/schemas/GasSettingsBySpeed"
					},
					"low": {
						"$ref": "#/components/schemas/GasSettingsBySpeed"
					},
					"avgBlockTime": {
						"type": "string",
						"description": "Average block processing time in the blockchain"
					}
				},
				"required": [
					"high",
					"middle",
					"low",
					"avgBlockTime"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RelayInfo": {
				"properties": {
					"chainId": {
						"type": "number",
						"format": "int",
						"description": "The ID of the blockchain. 1 для mainnet, 137 - polygon, 56 - finance smart chain, etc."
					},
					"gasStation": {
						"type": "string",
						"description": "Gas station contract address",
						"format": "address"
					},
					"feeTokens": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"description": "Addresses of tokens that support gas payment."
					},
					"balance": {
						"type": "string",
						"description": "The balance of the relay wallet",
						"format": "int256"
					},
					"version": {
						"type": "string",
						"description": "Relay version, from package.json"
					}
				},
				"required": [
					"chainId",
					"gasStation",
					"feeTokens",
					"balance",
					"version"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TxFeeResult": {
				"properties": {
					"fee": {
						"type": "string",
						"description": "Fee amount. int256 string."
					},
					"currency": {
						"type": "string",
						"description": "Token address for pay fee, or 'NATIVE' if fee cannot be paid with tokens."
					}
				},
				"required": [
					"fee",
					"currency"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TxFeeQuery": {
				"properties": {
					"from": {
						"type": "string",
						"description": "The address from which the transaction is sent",
						"format": "address"
					},
					"to": {
						"type": "string",
						"description": "The address of the contract or user where the transaction will be sent",
						"format": "address"
					},
					"data": {
						"type": "string",
						"description": "Transaction raw data"
					},
					"value": {
						"type": "string",
						"description": "ETH to send"
					},
					"feePerGas": {
						"type": "string",
						"description": "The cost of a unit of gas in wei"
					},
					"token": {
						"type": "string",
						"description": "The token that is required to pay fee"
					}
				},
				"required": [
					"from",
					"to",
					"data",
					"value",
					"feePerGas"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TxEstimateGasQuery": {
				"properties": {
					"from": {
						"type": "string",
						"description": "The address from which the transaction is sent"
					},
					"to": {
						"type": "string",
						"description": "The address of the contract or user where the transaction will be sent"
					},
					"data": {
						"type": "string",
						"description": "Transaction raw data"
					},
					"value": {
						"type": "string",
						"description": "ETH to send"
					},
					"token": {
						"type": "string",
						"description": "The token that is required to pay fee"
					}
				},
				"required": [
					"from",
					"to",
					"data",
					"value"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TxSendQueryInfo": {
				"properties": {
					"from": {
						"type": "string"
					},
					"to": {
						"type": "string"
					},
					"gas": {
						"type": "string"
					},
					"nonce": {
						"type": "string"
					},
					"deadline": {
						"type": "string"
					},
					"data": {
						"type": "string"
					}
				},
				"required": [
					"from",
					"to",
					"gas",
					"nonce",
					"deadline",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TxSendQueryFee": {
				"properties": {
					"token": {
						"type": "string"
					},
					"approvalData": {
						"type": "string"
					}
				},
				"required": [
					"token",
					"approvalData"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TxSendQuery": {
				"properties": {
					"tx": {
						"$ref": "#/components/schemas/TxSendQueryInfo"
					},
					"fee": {
						"$ref": "#/components/schemas/TxSendQueryFee"
					},
					"signature": {
						"type": "string"
					}
				},
				"required": [
					"tx",
					"fee",
					"signature"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "Plasma Gas Station Relay Server.",
		"version": "1.3.0",
		"description": "The relay server pays for gas for the user's transaction, takes ERC 20 tokens."
	},
	"openapi": "3.0.0",
	"paths": {
		"/gas": {
			"get": {
				"operationId": "GeGasPrice",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GasSettings"
								},
								"examples": {
									"Example 1": {
										"value": {
											"high": {
												"maxFeePerGas": "3904221514",
												"maxPriorityFeePerGas": "3904221504",
												"gasPrice": "3904221504",
												"confirmationTime": "363.06"
											},
											"middle": {
												"maxFeePerGas": "3904221514",
												"maxPriorityFeePerGas": "3904221504",
												"gasPrice": "3904221504",
												"confirmationTime": "363.06"
											},
											"low": {
												"maxFeePerGas": "3904221514",
												"maxPriorityFeePerGas": "3904221504",
												"gasPrice": "3904221504",
												"confirmationTime": "363.06"
											},
											"avgBlockTime": "12.102"
										}
									}
								}
							}
						}
					}
				},
				"description": "Returns recommended priority fee or gas price in wei. And also estimated  transaction execution time.",
				"summary": "Gas price",
				"tags": [
					"Gas"
				],
				"security": [],
				"parameters": []
			}
		},
		"/info": {
			"get": {
				"operationId": "GetInfo",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RelayInfo"
								},
								"examples": {
									"Example 1": {
										"value": {
											"chainId": 1,
											"gasStation": "0x280c78D5829Ad6E2403d6ae49BCf85f1D2119E0d",
											"feeTokens": [
												"0xdAC17F958D2ee523a2206206994597C13D831ec7",
												"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
											],
											"balance": "242392145778186007",
											"version": "1.3.0"
										}
									}
								}
							}
						}
					}
				},
				"description": "The Gas Station relay server configuration info.",
				"summary": "Relay server info.",
				"tags": [
					"Info"
				],
				"security": [],
				"parameters": []
			}
		},
		"/tx/fee": {
			"post": {
				"operationId": "PostFee",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TxFeeResult"
								},
								"examples": {
									"Example 1": {
										"value": {
											"currency": "NATIVE",
											"fee": "89934100000000"
										}
									}
								}
							}
						}
					}
				},
				"description": "Returns total transaction fee in received tokens.\nIf the received token address is not defined or is not supported, then fee will be in ETH",
				"tags": [
					"Transaction"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TxFeeQuery"
							}
						}
					}
				}
			}
		},
		"/tx/estimate-gas": {
			"post": {
				"operationId": "PostEstimateGas",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"estimateGas": {
											"type": "string"
										}
									},
									"required": [
										"estimateGas"
									],
									"type": "object"
								},
								"examples": {
									"Example 1": {
										"value": {
											"estimateGas": "8993410"
										}
									}
								}
							}
						}
					}
				},
				"description": "Returns an estimate of the amount of gas that would be required to submit transaction to the network.\nAn estimate may not be accurate since there could be another transaction on the network that was not accounted for, but after being mined affected relevant state.",
				"tags": [
					"Transaction"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TxEstimateGasQuery"
							}
						}
					}
				}
			}
		},
		"/tx/send": {
			"post": {
				"operationId": "PostSend",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"txHash": {
											"type": "string"
										}
									},
									"required": [
										"txHash"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Sends a transaction to the Gas Station contract.",
				"tags": [
					"Transaction"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TxSendQuery"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	],
	"tags": [
		{
			"name": "Info"
		},
		{
			"name": "Gas"
		},
		{
			"name": "Transaction"
		}
	]
}